{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","Date","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;AAGAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAKH,aAdM,CAAP;AAeH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,OAAKN,MADT,EACiB,WADjB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,wBAAGD,KAAH,EAAS;AACL,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASJ,KAAKK,KAAd,CAAf,EAAqCL,KAAKM,WAA1C,EAAuDN,KAAKO,MAA5D,CAAjB;AACAT,8BAAMU,QAAN;AACH,qBAJD,MAIO;AACH1B,gCAAQe,WAAR;AACH;AACJ,iBATD;AAUAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAee,IAA3B;AACA1B,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAtBM,CAAP;AAuBH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,OAAKN,MADR,EACgB,WADhB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT+B,KAHS,EAAd;;AAKA1B,wBAAQI,SAAR,GAAoB,aAAK;AACrBN,4BAAQ,mCAAR;AACH,iBAFD;AAGAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao)\n\n            request.onsuccess = e => {\n                resolve();\n            };\n            request.onerror = e => {\n                console.log(e.target.error)\n                reject('Não foi possível adicionar a negociação');\n            };\n\n        });\n    }\n\n    listaTodos(){\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .openCursor()\n\n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n                if(atual){\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(new Date(dado._data), dado._quantidade, dado._valor))\n                    atual.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            };\n            cursor.onerror = e => {\n                console.log(e.target.error.name);\n                reject('Não foi possível listar as negociações')\n            };\n        });\n    }\n\n    apagaTodos(){\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => {\n                resolve('Negociações removidas com sucesso');\n            };\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível remover as negociações');\n            };\n        });\n    }\n}"]}